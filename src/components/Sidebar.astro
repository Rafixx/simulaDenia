---
import type { SectionMeta } from "../data/types";

interface Props {
  sections: SectionMeta[];
}

const { sections } = Astro.props;

// Iconos SVG inline para evitar dependencias externas
const icons = {
  heart: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
  </svg>`,
  award: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="8" r="6"/>
    <path d="M15.477 12.89 17 22l-5-3-5 3 1.523-9.11"/>
  </svg>`,
  book: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"/>
  </svg>`,
  user: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
    <circle cx="12" cy="7" r="4"/>
  </svg>`,
  info: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="12" r="10"/>
    <path d="M12 16v-4"/>
    <path d="M12 8h.01"/>
  </svg>`,
};
---

<!-- Sidebar desktop: fijo a la izquierda -->
<aside
  class="hidden lg:block fixed left-0 top-0 h-full w-20 z-50 backdrop-blur-sm bg-white/70 dark:bg-zinc-900/60 border-r border-gray-200 dark:border-gray-700"
>
  <nav class="flex flex-col items-center pt-8 space-y-6">
    {
      sections.map((section) => (
        <a
          href={`#${section.key}`}
          class="p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 group"
          aria-label={section.title}
          data-section-key={section.key}
        >
          <div
            class="w-6 h-6 text-gray-600 dark:text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
            set:html={icons[section.icon as keyof typeof icons]}
          />
        </a>
      ))
    }
  </nav>
</aside>

<!-- Sidebar mÃ³vil: bottom bar fija -->
<nav
  class="lg:hidden fixed bottom-0 left-0 right-0 z-50 backdrop-blur-sm bg-white/70 dark:bg-zinc-900/60 border-t border-gray-200 dark:border-gray-700"
>
  <div class="flex justify-around items-center h-16 px-4">
    {
      sections.map((section) => (
        <a
          href={`#${section.key}`}
          class="flex flex-col items-center space-y-1 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 group min-w-0"
          aria-label={section.title}
          data-section-key={section.key}
        >
          <div
            class="w-5 h-5 text-gray-600 dark:text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors"
            set:html={icons[section.icon as keyof typeof icons]}
          />
          <span class="text-xs text-gray-500 dark:text-gray-400 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors truncate max-w-12 section-title">
            {section.title.split(" ")[0]}
          </span>
        </a>
      ))
    }
  </div>
</nav>
